Terminals unused in grammar

   T_PRINT
   T_PRT
   T_SUBT
   T_MUL
   T_DIV
   T_MOD


State 6 conflicts: 13 shift/reduce
State 21 conflicts: 1 shift/reduce
State 36 conflicts: 12 shift/reduce
State 43 conflicts: 1 shift/reduce, 12 reduce/reduce
State 44 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce, 12 reduce/reduce
State 46 conflicts: 1 shift/reduce
State 50 conflicts: 5 shift/reduce
State 51 conflicts: 12 shift/reduce
State 79 conflicts: 1 shift/reduce
State 86 conflicts: 12 shift/reduce
State 92 conflicts: 12 shift/reduce
State 93 conflicts: 12 shift/reduce
State 94 conflicts: 12 shift/reduce
State 95 conflicts: 12 shift/reduce
State 96 conflicts: 12 shift/reduce
State 97 conflicts: 5 shift/reduce
State 98 conflicts: 5 shift/reduce
State 99 conflicts: 5 shift/reduce
State 100 conflicts: 5 shift/reduce
State 101 conflicts: 5 shift/reduce
State 102 conflicts: 5 shift/reduce
State 103 conflicts: 5 shift/reduce
State 104 conflicts: 12 shift/reduce
State 106 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 113 conflicts: 5 shift/reduce, 30 reduce/reduce


Grammar

    0 $accept: root $end

    1 root: stmts

    2 stmts: %empty
    3      | stmt stmts

    4 stmt: T_LOOP stmt T_FOR expr
    5     | T_LOOP T_FOR expr stmt
    6     | expr T_SEMICOLON
    7     | T_BEGIN stmts T_END
    8     | T_IF expr T_THEN stmt
    9     | T_SUB T_IDENTIFIER T_OPEN_BRACKET arguments T_CLOSE_BRACKET stmt
   10     | T_IF expr T_THEN stmt T_ELSE stmt
   11     | T_VARIABLES T_OPEN_CURLY_BRACKET stmts T_CLOSE_CURLY_BRACKET
   12     | T_CODES T_OPEN_CURLY_BRACKET stmts T_CLOSE_CURLY_BRACKET
   13     | T_STRING T_IDENTIFIER
   14     | T_INTEGER T_IDENTIFIER
   15     | T_BOOL T_IDENTIFIER
   16     | T_BOOL T_IN expr
   17     | T_PUT expr stmt
   18     | T_IN expr
   19     | T_ASK expr

   20 arguments: %empty
   21          | argument_list

   22 argument_list: T_IDENTIFIER
   23              | T_IDENTIFIER T_COMMA argument_list

   24 call_arguments: %empty
   25               | call_argument_list

   26 call_argument_list: expr
   27                   | expr T_COMMA call_argument_list

   28 expr: T_VAR T_IDENTIFIER T_ASSIGN expr
   29     | T_DOLLAR T_STRING_LITERAL T_DOLLAR
   30     | T_IN T_IDENTIFIER
   31     | T_TRUE T_IN T_IDENTIFIER
   32     | T_FALSE T_IN T_IDENTIFIER
   33     | T_ASK T_IDENTIFIER
   34     | T_INTEGER
   35     | expr T_EQUAL expr
   36     | T_IDENTIFIER T_OPEN_BRACKET call_arguments T_CLOSE_BRACKET
   37     | T_IDENTIFIER
   38     | expr T_BINARY_OR expr
   39     | expr T_BINARY_AND expr
   40     | expr T_PLUS expr
   41     | T_ADD expr expr
   42     | expr T_MINUS expr
   43     | expr T_MULTIPLY expr
   44     | expr T_DIVIDE expr
   45     | expr T_MODULO expr
   46     | expr T_LESS expr
   47     | expr T_LESS_EQUAL expr
   48     | expr T_BIGGER expr
   49     | expr T_BIGGER_EQUAL expr
   50     | T_MINUS expr
   51     | T_OPEN_BRACKET expr T_CLOSE_BRACKET
   52     | T_NOT expr
   53     | T_RETURN
   54     | T_RETURN expr


Terminals, with rules where they appear

$end (0) 0
error (256)
T_VAR (258) 28
T_BEGIN (259) 7
T_END (260) 7
T_LOOP (261) 4 5
T_FOR (262) 4 5
T_SUB (263) 9
T_IF (264) 8 10
T_THEN (265) 8 10
T_ELSE (266) 10
T_PRINT (267)
T_RETURN (268) 53 54
T_STRING (269) 13
T_BOOL (270) 15 16
T_VARIABLES (271) 11
T_CODES (272) 12
T_PUT (273) 17
T_ASK (274) 19 33
T_PRT (275)
T_IN (276) 16 18 30 31 32
T_FALSE (277) 32
T_TRUE (278) 31
T_BIGGER (279) 48
T_LESS (280) 46
T_LESS_EQUAL (281) 47
T_BIGGER_EQUAL (282) 49
T_ASSIGN (283) 28
T_SEMICOLON (284) 6
T_EQUAL (285) 35
T_PLUS (286) 40
T_ADD (287) 41
T_SUBT (288)
T_MUL (289)
T_DIV (290)
T_MOD (291)
T_MINUS (292) 42 50
T_DIVIDE (293) 44
T_MULTIPLY (294) 43
T_MODULO (295) 45
T_NOT (296) 52
T_COMMA (297) 23 27
T_BINARY_OR (298) 38
T_BINARY_AND (299) 39
T_OPEN_BRACKET (300) 9 36 51
T_CLOSE_BRACKET (301) 9 36 51
T_UNARY_MINUS (302)
T_OPEN_CURLY_BRACKET (303) 11 12
T_CLOSE_CURLY_BRACKET (304) 11 12
T_DOLLAR (305) 29
T_IDENTIFIER (306) 9 13 14 15 22 23 28 30 31 32 33 36 37
T_INTEGER (307) 14 34
T_STRING_LITERAL (308) 29


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
root (55)
    on left: 1, on right: 0
stmts (56)
    on left: 2 3, on right: 1 3 7 11 12
stmt (57)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19, on right: 3
    4 5 8 9 10 17
arguments (58)
    on left: 20 21, on right: 9
argument_list (59)
    on left: 22 23, on right: 21 23
call_arguments (60)
    on left: 24 25, on right: 36
call_argument_list (61)
    on left: 26 27, on right: 25 27
expr (62)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 50 51 52 53 54, on right: 4 5 6 8 10 16 17 18 19 26
    27 28 35 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 54


State 0

    0 $accept: . root $end

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    $default  reduce using rule 2 (stmts)

    root   go to state 23
    stmts  go to state 24
    stmt   go to state 25
    expr   go to state 26


State 1

   28 expr: T_VAR . T_IDENTIFIER T_ASSIGN expr

    T_IDENTIFIER  shift, and go to state 27


State 2

    7 stmt: T_BEGIN . stmts T_END

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    $default  reduce using rule 2 (stmts)

    stmts  go to state 28
    stmt   go to state 25
    expr   go to state 26


State 3

    4 stmt: T_LOOP . stmt T_FOR expr
    5     | T_LOOP . T_FOR expr stmt

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_FOR           shift, and go to state 29
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    stmt  go to state 30
    expr  go to state 26


State 4

    9 stmt: T_SUB . T_IDENTIFIER T_OPEN_BRACKET arguments T_CLOSE_BRACKET stmt

    T_IDENTIFIER  shift, and go to state 31


State 5

    8 stmt: T_IF . expr T_THEN stmt
   10     | T_IF . expr T_THEN stmt T_ELSE stmt

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 35


State 6

   53 expr: T_RETURN .
   54     | T_RETURN . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    T_VAR           [reduce using rule 53 (expr)]
    T_RETURN        [reduce using rule 53 (expr)]
    T_ASK           [reduce using rule 53 (expr)]
    T_IN            [reduce using rule 53 (expr)]
    T_FALSE         [reduce using rule 53 (expr)]
    T_TRUE          [reduce using rule 53 (expr)]
    T_ADD           [reduce using rule 53 (expr)]
    T_MINUS         [reduce using rule 53 (expr)]
    T_NOT           [reduce using rule 53 (expr)]
    T_OPEN_BRACKET  [reduce using rule 53 (expr)]
    T_DOLLAR        [reduce using rule 53 (expr)]
    T_IDENTIFIER    [reduce using rule 53 (expr)]
    T_INTEGER       [reduce using rule 53 (expr)]
    $default        reduce using rule 53 (expr)

    expr  go to state 36


State 7

   13 stmt: T_STRING . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 37


State 8

   15 stmt: T_BOOL . T_IDENTIFIER
   16     | T_BOOL . T_IN expr

    T_IN          shift, and go to state 38
    T_IDENTIFIER  shift, and go to state 39


State 9

   11 stmt: T_VARIABLES . T_OPEN_CURLY_BRACKET stmts T_CLOSE_CURLY_BRACKET

    T_OPEN_CURLY_BRACKET  shift, and go to state 40


State 10

   12 stmt: T_CODES . T_OPEN_CURLY_BRACKET stmts T_CLOSE_CURLY_BRACKET

    T_OPEN_CURLY_BRACKET  shift, and go to state 41


State 11

   17 stmt: T_PUT . expr stmt

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 42


State 12

   19 stmt: T_ASK . expr
   33 expr: T_ASK . T_IDENTIFIER

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 43
    T_INTEGER       shift, and go to state 34

    expr  go to state 44


State 13

   18 stmt: T_IN . expr
   30 expr: T_IN . T_IDENTIFIER

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 45
    T_INTEGER       shift, and go to state 34

    expr  go to state 46


State 14

   32 expr: T_FALSE . T_IN T_IDENTIFIER

    T_IN  shift, and go to state 47


State 15

   31 expr: T_TRUE . T_IN T_IDENTIFIER

    T_IN  shift, and go to state 48


State 16

   41 expr: T_ADD . expr expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 49


State 17

   50 expr: T_MINUS . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 50


State 18

   52 expr: T_NOT . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 51


State 19

   51 expr: T_OPEN_BRACKET . expr T_CLOSE_BRACKET

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 52


State 20

   29 expr: T_DOLLAR . T_STRING_LITERAL T_DOLLAR

    T_STRING_LITERAL  shift, and go to state 53


State 21

   36 expr: T_IDENTIFIER . T_OPEN_BRACKET call_arguments T_CLOSE_BRACKET
   37     | T_IDENTIFIER .

    T_OPEN_BRACKET  shift, and go to state 54

    T_OPEN_BRACKET  [reduce using rule 37 (expr)]
    $default        reduce using rule 37 (expr)


State 22

   14 stmt: T_INTEGER . T_IDENTIFIER
   34 expr: T_INTEGER .

    T_IDENTIFIER  shift, and go to state 55

    $default  reduce using rule 34 (expr)


State 23

    0 $accept: root . $end

    $end  shift, and go to state 56


State 24

    1 root: stmts .

    $default  reduce using rule 1 (root)


State 25

    3 stmts: stmt . stmts

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    $default  reduce using rule 2 (stmts)

    stmts  go to state 57
    stmt   go to state 25
    expr   go to state 26


State 26

    6 stmt: expr . T_SEMICOLON
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_SEMICOLON     shift, and go to state 62
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70


State 27

   28 expr: T_VAR T_IDENTIFIER . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 71


State 28

    7 stmt: T_BEGIN stmts . T_END

    T_END  shift, and go to state 72


State 29

    5 stmt: T_LOOP T_FOR . expr stmt

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 73


State 30

    4 stmt: T_LOOP stmt . T_FOR expr

    T_FOR  shift, and go to state 74


State 31

    9 stmt: T_SUB T_IDENTIFIER . T_OPEN_BRACKET arguments T_CLOSE_BRACKET stmt

    T_OPEN_BRACKET  shift, and go to state 75


State 32

   33 expr: T_ASK . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 76


State 33

   30 expr: T_IN . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 77


State 34

   34 expr: T_INTEGER .

    $default  reduce using rule 34 (expr)


State 35

    8 stmt: T_IF expr . T_THEN stmt
   10     | T_IF expr . T_THEN stmt T_ELSE stmt
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_THEN          shift, and go to state 78
    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70


State 36

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr
   54     | T_RETURN expr .

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 54 (expr)]
    T_LESS          [reduce using rule 54 (expr)]
    T_LESS_EQUAL    [reduce using rule 54 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 54 (expr)]
    T_EQUAL         [reduce using rule 54 (expr)]
    T_PLUS          [reduce using rule 54 (expr)]
    T_MINUS         [reduce using rule 54 (expr)]
    T_DIVIDE        [reduce using rule 54 (expr)]
    T_MULTIPLY      [reduce using rule 54 (expr)]
    T_MODULO        [reduce using rule 54 (expr)]
    T_BINARY_OR     [reduce using rule 54 (expr)]
    T_BINARY_AND    [reduce using rule 54 (expr)]
    $default        reduce using rule 54 (expr)


State 37

   13 stmt: T_STRING T_IDENTIFIER .

    $default  reduce using rule 13 (stmt)


State 38

   16 stmt: T_BOOL T_IN . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 79


State 39

   15 stmt: T_BOOL T_IDENTIFIER .

    $default  reduce using rule 15 (stmt)


State 40

   11 stmt: T_VARIABLES T_OPEN_CURLY_BRACKET . stmts T_CLOSE_CURLY_BRACKET

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    $default  reduce using rule 2 (stmts)

    stmts  go to state 80
    stmt   go to state 25
    expr   go to state 26


State 41

   12 stmt: T_CODES T_OPEN_CURLY_BRACKET . stmts T_CLOSE_CURLY_BRACKET

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    $default  reduce using rule 2 (stmts)

    stmts  go to state 81
    stmt   go to state 25
    expr   go to state 26


State 42

   17 stmt: T_PUT expr . stmt
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 82
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_NOT           shift, and go to state 18
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    stmt  go to state 83
    expr  go to state 26


State 43

   33 expr: T_ASK T_IDENTIFIER .
   36     | T_IDENTIFIER . T_OPEN_BRACKET call_arguments T_CLOSE_BRACKET
   37     | T_IDENTIFIER .

    T_OPEN_BRACKET  shift, and go to state 54

    T_BIGGER        reduce using rule 33 (expr)
    T_BIGGER        [reduce using rule 37 (expr)]
    T_LESS          reduce using rule 33 (expr)
    T_LESS          [reduce using rule 37 (expr)]
    T_LESS_EQUAL    reduce using rule 33 (expr)
    T_LESS_EQUAL    [reduce using rule 37 (expr)]
    T_BIGGER_EQUAL  reduce using rule 33 (expr)
    T_BIGGER_EQUAL  [reduce using rule 37 (expr)]
    T_SEMICOLON     reduce using rule 33 (expr)
    T_EQUAL         reduce using rule 33 (expr)
    T_EQUAL         [reduce using rule 37 (expr)]
    T_PLUS          reduce using rule 33 (expr)
    T_PLUS          [reduce using rule 37 (expr)]
    T_MINUS         reduce using rule 33 (expr)
    T_MINUS         [reduce using rule 37 (expr)]
    T_DIVIDE        reduce using rule 33 (expr)
    T_DIVIDE        [reduce using rule 37 (expr)]
    T_MULTIPLY      reduce using rule 33 (expr)
    T_MULTIPLY      [reduce using rule 37 (expr)]
    T_MODULO        reduce using rule 33 (expr)
    T_MODULO        [reduce using rule 37 (expr)]
    T_BINARY_OR     reduce using rule 33 (expr)
    T_BINARY_OR     [reduce using rule 37 (expr)]
    T_BINARY_AND    reduce using rule 33 (expr)
    T_BINARY_AND    [reduce using rule 37 (expr)]
    T_OPEN_BRACKET  [reduce using rule 37 (expr)]
    $default        reduce using rule 37 (expr)


State 44

   19 stmt: T_ASK expr .
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_MINUS   [reduce using rule 19 (stmt)]
    $default  reduce using rule 19 (stmt)


State 45

   30 expr: T_IN T_IDENTIFIER .
   36     | T_IDENTIFIER . T_OPEN_BRACKET call_arguments T_CLOSE_BRACKET
   37     | T_IDENTIFIER .

    T_OPEN_BRACKET  shift, and go to state 54

    T_BIGGER        reduce using rule 30 (expr)
    T_BIGGER        [reduce using rule 37 (expr)]
    T_LESS          reduce using rule 30 (expr)
    T_LESS          [reduce using rule 37 (expr)]
    T_LESS_EQUAL    reduce using rule 30 (expr)
    T_LESS_EQUAL    [reduce using rule 37 (expr)]
    T_BIGGER_EQUAL  reduce using rule 30 (expr)
    T_BIGGER_EQUAL  [reduce using rule 37 (expr)]
    T_SEMICOLON     reduce using rule 30 (expr)
    T_EQUAL         reduce using rule 30 (expr)
    T_EQUAL         [reduce using rule 37 (expr)]
    T_PLUS          reduce using rule 30 (expr)
    T_PLUS          [reduce using rule 37 (expr)]
    T_MINUS         reduce using rule 30 (expr)
    T_MINUS         [reduce using rule 37 (expr)]
    T_DIVIDE        reduce using rule 30 (expr)
    T_DIVIDE        [reduce using rule 37 (expr)]
    T_MULTIPLY      reduce using rule 30 (expr)
    T_MULTIPLY      [reduce using rule 37 (expr)]
    T_MODULO        reduce using rule 30 (expr)
    T_MODULO        [reduce using rule 37 (expr)]
    T_BINARY_OR     reduce using rule 30 (expr)
    T_BINARY_OR     [reduce using rule 37 (expr)]
    T_BINARY_AND    reduce using rule 30 (expr)
    T_BINARY_AND    [reduce using rule 37 (expr)]
    T_OPEN_BRACKET  [reduce using rule 37 (expr)]
    $default        reduce using rule 37 (expr)


State 46

   18 stmt: T_IN expr .
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_MINUS   [reduce using rule 18 (stmt)]
    $default  reduce using rule 18 (stmt)


State 47

   32 expr: T_FALSE T_IN . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 84


State 48

   31 expr: T_TRUE T_IN . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 85


State 49

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   41     | T_ADD expr . expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 82
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_NOT           shift, and go to state 18
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 86


State 50

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr
   50     | T_MINUS expr .

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63

    T_BIGGER        [reduce using rule 50 (expr)]
    T_LESS          [reduce using rule 50 (expr)]
    T_LESS_EQUAL    [reduce using rule 50 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 50 (expr)]
    T_EQUAL         [reduce using rule 50 (expr)]
    $default        reduce using rule 50 (expr)


State 51

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr
   52     | T_NOT expr .

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 52 (expr)]
    T_LESS          [reduce using rule 52 (expr)]
    T_LESS_EQUAL    [reduce using rule 52 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 52 (expr)]
    T_EQUAL         [reduce using rule 52 (expr)]
    T_PLUS          [reduce using rule 52 (expr)]
    T_MINUS         [reduce using rule 52 (expr)]
    T_DIVIDE        [reduce using rule 52 (expr)]
    T_MULTIPLY      [reduce using rule 52 (expr)]
    T_MODULO        [reduce using rule 52 (expr)]
    T_BINARY_OR     [reduce using rule 52 (expr)]
    T_BINARY_AND    [reduce using rule 52 (expr)]
    $default        reduce using rule 52 (expr)


State 52

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr
   51     | T_OPEN_BRACKET expr . T_CLOSE_BRACKET

    T_BIGGER         shift, and go to state 58
    T_LESS           shift, and go to state 59
    T_LESS_EQUAL     shift, and go to state 60
    T_BIGGER_EQUAL   shift, and go to state 61
    T_EQUAL          shift, and go to state 63
    T_PLUS           shift, and go to state 64
    T_MINUS          shift, and go to state 65
    T_DIVIDE         shift, and go to state 66
    T_MULTIPLY       shift, and go to state 67
    T_MODULO         shift, and go to state 68
    T_BINARY_OR      shift, and go to state 69
    T_BINARY_AND     shift, and go to state 70
    T_CLOSE_BRACKET  shift, and go to state 87


State 53

   29 expr: T_DOLLAR T_STRING_LITERAL . T_DOLLAR

    T_DOLLAR  shift, and go to state 88


State 54

   36 expr: T_IDENTIFIER T_OPEN_BRACKET . call_arguments T_CLOSE_BRACKET

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    $default  reduce using rule 24 (call_arguments)

    call_arguments      go to state 89
    call_argument_list  go to state 90
    expr                go to state 91


State 55

   14 stmt: T_INTEGER T_IDENTIFIER .

    $default  reduce using rule 14 (stmt)


State 56

    0 $accept: root $end .

    $default  accept


State 57

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


State 58

   48 expr: expr T_BIGGER . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 92


State 59

   46 expr: expr T_LESS . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 93


State 60

   47 expr: expr T_LESS_EQUAL . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 94


State 61

   49 expr: expr T_BIGGER_EQUAL . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 95


State 62

    6 stmt: expr T_SEMICOLON .

    $default  reduce using rule 6 (stmt)


State 63

   35 expr: expr T_EQUAL . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 96


State 64

   40 expr: expr T_PLUS . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 97


State 65

   42 expr: expr T_MINUS . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 98


State 66

   44 expr: expr T_DIVIDE . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 99


State 67

   43 expr: expr T_MULTIPLY . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 100


State 68

   45 expr: expr T_MODULO . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 101


State 69

   38 expr: expr T_BINARY_OR . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 102


State 70

   39 expr: expr T_BINARY_AND . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 103


State 71

   28 expr: T_VAR T_IDENTIFIER T_ASSIGN . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 104


State 72

    7 stmt: T_BEGIN stmts T_END .

    $default  reduce using rule 7 (stmt)


State 73

    5 stmt: T_LOOP T_FOR expr . stmt
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 82
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_NOT           shift, and go to state 18
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    stmt  go to state 105
    expr  go to state 26


State 74

    4 stmt: T_LOOP stmt T_FOR . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 106


State 75

    9 stmt: T_SUB T_IDENTIFIER T_OPEN_BRACKET . arguments T_CLOSE_BRACKET stmt

    T_IDENTIFIER  shift, and go to state 107

    $default  reduce using rule 20 (arguments)

    arguments      go to state 108
    argument_list  go to state 109


State 76

   33 expr: T_ASK T_IDENTIFIER .

    $default  reduce using rule 33 (expr)


State 77

   30 expr: T_IN T_IDENTIFIER .

    $default  reduce using rule 30 (expr)


State 78

    8 stmt: T_IF expr T_THEN . stmt
   10     | T_IF expr T_THEN . stmt T_ELSE stmt

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    stmt  go to state 110
    expr  go to state 26


State 79

   16 stmt: T_BOOL T_IN expr .
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_MINUS   [reduce using rule 16 (stmt)]
    $default  reduce using rule 16 (stmt)


State 80

   11 stmt: T_VARIABLES T_OPEN_CURLY_BRACKET stmts . T_CLOSE_CURLY_BRACKET

    T_CLOSE_CURLY_BRACKET  shift, and go to state 111


State 81

   12 stmt: T_CODES T_OPEN_CURLY_BRACKET stmts . T_CLOSE_CURLY_BRACKET

    T_CLOSE_CURLY_BRACKET  shift, and go to state 112


State 82

   42 expr: expr T_MINUS . expr
   50     | T_MINUS . expr

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    expr  go to state 113


State 83

   17 stmt: T_PUT expr stmt .

    $default  reduce using rule 17 (stmt)


State 84

   32 expr: T_FALSE T_IN T_IDENTIFIER .

    $default  reduce using rule 32 (expr)


State 85

   31 expr: T_TRUE T_IN T_IDENTIFIER .

    $default  reduce using rule 31 (expr)


State 86

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   41     | T_ADD expr expr .
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 41 (expr)]
    T_LESS          [reduce using rule 41 (expr)]
    T_LESS_EQUAL    [reduce using rule 41 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 41 (expr)]
    T_EQUAL         [reduce using rule 41 (expr)]
    T_PLUS          [reduce using rule 41 (expr)]
    T_MINUS         [reduce using rule 41 (expr)]
    T_DIVIDE        [reduce using rule 41 (expr)]
    T_MULTIPLY      [reduce using rule 41 (expr)]
    T_MODULO        [reduce using rule 41 (expr)]
    T_BINARY_OR     [reduce using rule 41 (expr)]
    T_BINARY_AND    [reduce using rule 41 (expr)]
    $default        reduce using rule 41 (expr)


State 87

   51 expr: T_OPEN_BRACKET expr T_CLOSE_BRACKET .

    $default  reduce using rule 51 (expr)


State 88

   29 expr: T_DOLLAR T_STRING_LITERAL T_DOLLAR .

    $default  reduce using rule 29 (expr)


State 89

   36 expr: T_IDENTIFIER T_OPEN_BRACKET call_arguments . T_CLOSE_BRACKET

    T_CLOSE_BRACKET  shift, and go to state 114


State 90

   25 call_arguments: call_argument_list .

    $default  reduce using rule 25 (call_arguments)


State 91

   26 call_argument_list: expr .
   27                   | expr . T_COMMA call_argument_list
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_COMMA         shift, and go to state 115
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    $default  reduce using rule 26 (call_argument_list)


State 92

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   48     | expr T_BIGGER expr .
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 48 (expr)]
    T_LESS          [reduce using rule 48 (expr)]
    T_LESS_EQUAL    [reduce using rule 48 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 48 (expr)]
    T_EQUAL         [reduce using rule 48 (expr)]
    T_PLUS          [reduce using rule 48 (expr)]
    T_MINUS         [reduce using rule 48 (expr)]
    T_DIVIDE        [reduce using rule 48 (expr)]
    T_MULTIPLY      [reduce using rule 48 (expr)]
    T_MODULO        [reduce using rule 48 (expr)]
    T_BINARY_OR     [reduce using rule 48 (expr)]
    T_BINARY_AND    [reduce using rule 48 (expr)]
    $default        reduce using rule 48 (expr)


State 93

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   46     | expr T_LESS expr .
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 46 (expr)]
    T_LESS          [reduce using rule 46 (expr)]
    T_LESS_EQUAL    [reduce using rule 46 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 46 (expr)]
    T_EQUAL         [reduce using rule 46 (expr)]
    T_PLUS          [reduce using rule 46 (expr)]
    T_MINUS         [reduce using rule 46 (expr)]
    T_DIVIDE        [reduce using rule 46 (expr)]
    T_MULTIPLY      [reduce using rule 46 (expr)]
    T_MODULO        [reduce using rule 46 (expr)]
    T_BINARY_OR     [reduce using rule 46 (expr)]
    T_BINARY_AND    [reduce using rule 46 (expr)]
    $default        reduce using rule 46 (expr)


State 94

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   47     | expr T_LESS_EQUAL expr .
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 47 (expr)]
    T_LESS          [reduce using rule 47 (expr)]
    T_LESS_EQUAL    [reduce using rule 47 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 47 (expr)]
    T_EQUAL         [reduce using rule 47 (expr)]
    T_PLUS          [reduce using rule 47 (expr)]
    T_MINUS         [reduce using rule 47 (expr)]
    T_DIVIDE        [reduce using rule 47 (expr)]
    T_MULTIPLY      [reduce using rule 47 (expr)]
    T_MODULO        [reduce using rule 47 (expr)]
    T_BINARY_OR     [reduce using rule 47 (expr)]
    T_BINARY_AND    [reduce using rule 47 (expr)]
    $default        reduce using rule 47 (expr)


State 95

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr
   49     | expr T_BIGGER_EQUAL expr .

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 49 (expr)]
    T_LESS          [reduce using rule 49 (expr)]
    T_LESS_EQUAL    [reduce using rule 49 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 49 (expr)]
    T_EQUAL         [reduce using rule 49 (expr)]
    T_PLUS          [reduce using rule 49 (expr)]
    T_MINUS         [reduce using rule 49 (expr)]
    T_DIVIDE        [reduce using rule 49 (expr)]
    T_MULTIPLY      [reduce using rule 49 (expr)]
    T_MODULO        [reduce using rule 49 (expr)]
    T_BINARY_OR     [reduce using rule 49 (expr)]
    T_BINARY_AND    [reduce using rule 49 (expr)]
    $default        reduce using rule 49 (expr)


State 96

   35 expr: expr . T_EQUAL expr
   35     | expr T_EQUAL expr .
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 35 (expr)]
    T_LESS          [reduce using rule 35 (expr)]
    T_LESS_EQUAL    [reduce using rule 35 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 35 (expr)]
    T_EQUAL         [reduce using rule 35 (expr)]
    T_PLUS          [reduce using rule 35 (expr)]
    T_MINUS         [reduce using rule 35 (expr)]
    T_DIVIDE        [reduce using rule 35 (expr)]
    T_MULTIPLY      [reduce using rule 35 (expr)]
    T_MODULO        [reduce using rule 35 (expr)]
    T_BINARY_OR     [reduce using rule 35 (expr)]
    T_BINARY_AND    [reduce using rule 35 (expr)]
    $default        reduce using rule 35 (expr)


State 97

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   40     | expr T_PLUS expr .
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68

    T_BIGGER        [reduce using rule 40 (expr)]
    T_LESS          [reduce using rule 40 (expr)]
    T_LESS_EQUAL    [reduce using rule 40 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 40 (expr)]
    T_EQUAL         [reduce using rule 40 (expr)]
    $default        reduce using rule 40 (expr)


State 98

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   42     | expr T_MINUS expr .
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68

    T_BIGGER        [reduce using rule 42 (expr)]
    T_LESS          [reduce using rule 42 (expr)]
    T_LESS_EQUAL    [reduce using rule 42 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 42 (expr)]
    T_EQUAL         [reduce using rule 42 (expr)]
    $default        reduce using rule 42 (expr)


State 99

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   44     | expr T_DIVIDE expr .
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63

    T_BIGGER        [reduce using rule 44 (expr)]
    T_LESS          [reduce using rule 44 (expr)]
    T_LESS_EQUAL    [reduce using rule 44 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 44 (expr)]
    T_EQUAL         [reduce using rule 44 (expr)]
    $default        reduce using rule 44 (expr)


State 100

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   43     | expr T_MULTIPLY expr .
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63

    T_BIGGER        [reduce using rule 43 (expr)]
    T_LESS          [reduce using rule 43 (expr)]
    T_LESS_EQUAL    [reduce using rule 43 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 43 (expr)]
    T_EQUAL         [reduce using rule 43 (expr)]
    $default        reduce using rule 43 (expr)


State 101

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   45     | expr T_MODULO expr .
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63

    T_BIGGER        [reduce using rule 45 (expr)]
    T_LESS          [reduce using rule 45 (expr)]
    T_LESS_EQUAL    [reduce using rule 45 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 45 (expr)]
    T_EQUAL         [reduce using rule 45 (expr)]
    $default        reduce using rule 45 (expr)


State 102

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   38     | expr T_BINARY_OR expr .
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 38 (expr)]
    T_LESS          [reduce using rule 38 (expr)]
    T_LESS_EQUAL    [reduce using rule 38 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 38 (expr)]
    T_EQUAL         [reduce using rule 38 (expr)]
    $default        reduce using rule 38 (expr)


State 103

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   39     | expr T_BINARY_AND expr .
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68

    T_BIGGER        [reduce using rule 39 (expr)]
    T_LESS          [reduce using rule 39 (expr)]
    T_LESS_EQUAL    [reduce using rule 39 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 39 (expr)]
    T_EQUAL         [reduce using rule 39 (expr)]
    $default        reduce using rule 39 (expr)


State 104

   28 expr: T_VAR T_IDENTIFIER T_ASSIGN expr .
   35     | expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_BIGGER        [reduce using rule 28 (expr)]
    T_LESS          [reduce using rule 28 (expr)]
    T_LESS_EQUAL    [reduce using rule 28 (expr)]
    T_BIGGER_EQUAL  [reduce using rule 28 (expr)]
    T_EQUAL         [reduce using rule 28 (expr)]
    T_PLUS          [reduce using rule 28 (expr)]
    T_MINUS         [reduce using rule 28 (expr)]
    T_DIVIDE        [reduce using rule 28 (expr)]
    T_MULTIPLY      [reduce using rule 28 (expr)]
    T_MODULO        [reduce using rule 28 (expr)]
    T_BINARY_OR     [reduce using rule 28 (expr)]
    T_BINARY_AND    [reduce using rule 28 (expr)]
    $default        reduce using rule 28 (expr)


State 105

    5 stmt: T_LOOP T_FOR expr stmt .

    $default  reduce using rule 5 (stmt)


State 106

    4 stmt: T_LOOP stmt T_FOR expr .
   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63
    T_PLUS          shift, and go to state 64
    T_MINUS         shift, and go to state 65
    T_DIVIDE        shift, and go to state 66
    T_MULTIPLY      shift, and go to state 67
    T_MODULO        shift, and go to state 68
    T_BINARY_OR     shift, and go to state 69
    T_BINARY_AND    shift, and go to state 70

    T_MINUS   [reduce using rule 4 (stmt)]
    $default  reduce using rule 4 (stmt)


State 107

   22 argument_list: T_IDENTIFIER .
   23              | T_IDENTIFIER . T_COMMA argument_list

    T_COMMA  shift, and go to state 116

    $default  reduce using rule 22 (argument_list)


State 108

    9 stmt: T_SUB T_IDENTIFIER T_OPEN_BRACKET arguments . T_CLOSE_BRACKET stmt

    T_CLOSE_BRACKET  shift, and go to state 117


State 109

   21 arguments: argument_list .

    $default  reduce using rule 21 (arguments)


State 110

    8 stmt: T_IF expr T_THEN stmt .
   10     | T_IF expr T_THEN stmt . T_ELSE stmt

    T_ELSE  shift, and go to state 118

    T_ELSE    [reduce using rule 8 (stmt)]
    $default  reduce using rule 8 (stmt)


State 111

   11 stmt: T_VARIABLES T_OPEN_CURLY_BRACKET stmts T_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 11 (stmt)


State 112

   12 stmt: T_CODES T_OPEN_CURLY_BRACKET stmts T_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 12 (stmt)


State 113

   35 expr: expr . T_EQUAL expr
   38     | expr . T_BINARY_OR expr
   39     | expr . T_BINARY_AND expr
   40     | expr . T_PLUS expr
   42     | expr . T_MINUS expr
   42     | expr T_MINUS expr .
   43     | expr . T_MULTIPLY expr
   44     | expr . T_DIVIDE expr
   45     | expr . T_MODULO expr
   46     | expr . T_LESS expr
   47     | expr . T_LESS_EQUAL expr
   48     | expr . T_BIGGER expr
   49     | expr . T_BIGGER_EQUAL expr
   50     | T_MINUS expr .

    T_BIGGER        shift, and go to state 58
    T_LESS          shift, and go to state 59
    T_LESS_EQUAL    shift, and go to state 60
    T_BIGGER_EQUAL  shift, and go to state 61
    T_EQUAL         shift, and go to state 63

    $end                   reduce using rule 50 (expr)
    T_VAR                  reduce using rule 42 (expr)
    T_VAR                  [reduce using rule 50 (expr)]
    T_BEGIN                reduce using rule 42 (expr)
    T_BEGIN                [reduce using rule 50 (expr)]
    T_END                  reduce using rule 50 (expr)
    T_LOOP                 reduce using rule 42 (expr)
    T_LOOP                 [reduce using rule 50 (expr)]
    T_FOR                  reduce using rule 50 (expr)
    T_SUB                  reduce using rule 42 (expr)
    T_SUB                  [reduce using rule 50 (expr)]
    T_IF                   reduce using rule 42 (expr)
    T_IF                   [reduce using rule 50 (expr)]
    T_THEN                 reduce using rule 50 (expr)
    T_ELSE                 reduce using rule 50 (expr)
    T_RETURN               reduce using rule 42 (expr)
    T_RETURN               [reduce using rule 50 (expr)]
    T_STRING               reduce using rule 42 (expr)
    T_STRING               [reduce using rule 50 (expr)]
    T_BOOL                 reduce using rule 42 (expr)
    T_BOOL                 [reduce using rule 50 (expr)]
    T_VARIABLES            reduce using rule 42 (expr)
    T_VARIABLES            [reduce using rule 50 (expr)]
    T_CODES                reduce using rule 42 (expr)
    T_CODES                [reduce using rule 50 (expr)]
    T_PUT                  reduce using rule 42 (expr)
    T_PUT                  [reduce using rule 50 (expr)]
    T_ASK                  reduce using rule 42 (expr)
    T_ASK                  [reduce using rule 50 (expr)]
    T_IN                   reduce using rule 42 (expr)
    T_IN                   [reduce using rule 50 (expr)]
    T_FALSE                reduce using rule 42 (expr)
    T_FALSE                [reduce using rule 50 (expr)]
    T_TRUE                 reduce using rule 42 (expr)
    T_TRUE                 [reduce using rule 50 (expr)]
    T_BIGGER               [reduce using rule 42 (expr)]
    T_BIGGER               [reduce using rule 50 (expr)]
    T_LESS                 [reduce using rule 42 (expr)]
    T_LESS                 [reduce using rule 50 (expr)]
    T_LESS_EQUAL           [reduce using rule 42 (expr)]
    T_LESS_EQUAL           [reduce using rule 50 (expr)]
    T_BIGGER_EQUAL         [reduce using rule 42 (expr)]
    T_BIGGER_EQUAL         [reduce using rule 50 (expr)]
    T_SEMICOLON            reduce using rule 50 (expr)
    T_EQUAL                [reduce using rule 42 (expr)]
    T_EQUAL                [reduce using rule 50 (expr)]
    T_PLUS                 reduce using rule 42 (expr)
    T_PLUS                 [reduce using rule 50 (expr)]
    T_ADD                  reduce using rule 42 (expr)
    T_ADD                  [reduce using rule 50 (expr)]
    T_MINUS                reduce using rule 42 (expr)
    T_MINUS                [reduce using rule 50 (expr)]
    T_DIVIDE               reduce using rule 50 (expr)
    T_MULTIPLY             reduce using rule 50 (expr)
    T_MODULO               reduce using rule 50 (expr)
    T_NOT                  reduce using rule 42 (expr)
    T_NOT                  [reduce using rule 50 (expr)]
    T_COMMA                reduce using rule 50 (expr)
    T_BINARY_OR            reduce using rule 42 (expr)
    T_BINARY_OR            [reduce using rule 50 (expr)]
    T_BINARY_AND           reduce using rule 42 (expr)
    T_BINARY_AND           [reduce using rule 50 (expr)]
    T_OPEN_BRACKET         reduce using rule 42 (expr)
    T_OPEN_BRACKET         [reduce using rule 50 (expr)]
    T_CLOSE_BRACKET        reduce using rule 50 (expr)
    T_CLOSE_CURLY_BRACKET  reduce using rule 50 (expr)
    T_DOLLAR               reduce using rule 42 (expr)
    T_DOLLAR               [reduce using rule 50 (expr)]
    T_IDENTIFIER           reduce using rule 42 (expr)
    T_IDENTIFIER           [reduce using rule 50 (expr)]
    T_INTEGER              reduce using rule 42 (expr)
    T_INTEGER              [reduce using rule 50 (expr)]
    $default               reduce using rule 42 (expr)


State 114

   36 expr: T_IDENTIFIER T_OPEN_BRACKET call_arguments T_CLOSE_BRACKET .

    $default  reduce using rule 36 (expr)


State 115

   27 call_argument_list: expr T_COMMA . call_argument_list

    T_VAR           shift, and go to state 1
    T_RETURN        shift, and go to state 6
    T_ASK           shift, and go to state 32
    T_IN            shift, and go to state 33
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 34

    call_argument_list  go to state 119
    expr                go to state 91


State 116

   23 argument_list: T_IDENTIFIER T_COMMA . argument_list

    T_IDENTIFIER  shift, and go to state 107

    argument_list  go to state 120


State 117

    9 stmt: T_SUB T_IDENTIFIER T_OPEN_BRACKET arguments T_CLOSE_BRACKET . stmt

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    stmt  go to state 121
    expr  go to state 26


State 118

   10 stmt: T_IF expr T_THEN stmt T_ELSE . stmt

    T_VAR           shift, and go to state 1
    T_BEGIN         shift, and go to state 2
    T_LOOP          shift, and go to state 3
    T_SUB           shift, and go to state 4
    T_IF            shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_STRING        shift, and go to state 7
    T_BOOL          shift, and go to state 8
    T_VARIABLES     shift, and go to state 9
    T_CODES         shift, and go to state 10
    T_PUT           shift, and go to state 11
    T_ASK           shift, and go to state 12
    T_IN            shift, and go to state 13
    T_FALSE         shift, and go to state 14
    T_TRUE          shift, and go to state 15
    T_ADD           shift, and go to state 16
    T_MINUS         shift, and go to state 17
    T_NOT           shift, and go to state 18
    T_OPEN_BRACKET  shift, and go to state 19
    T_DOLLAR        shift, and go to state 20
    T_IDENTIFIER    shift, and go to state 21
    T_INTEGER       shift, and go to state 22

    stmt  go to state 122
    expr  go to state 26


State 119

   27 call_argument_list: expr T_COMMA call_argument_list .

    $default  reduce using rule 27 (call_argument_list)


State 120

   23 argument_list: T_IDENTIFIER T_COMMA argument_list .

    $default  reduce using rule 23 (argument_list)


State 121

    9 stmt: T_SUB T_IDENTIFIER T_OPEN_BRACKET arguments T_CLOSE_BRACKET stmt .

    $default  reduce using rule 9 (stmt)


State 122

   10 stmt: T_IF expr T_THEN stmt T_ELSE stmt .

    $default  reduce using rule 10 (stmt)
